
=== Data shape after importing from raw dataset ===

X_Train Shape: torch.Size([1000, 64, 64, 10, 10])
Y_Train Shape: torch.Size([1000, 64, 64, 10])
X_Test Shape: torch.Size([200, 64, 64, 10, 10])
Y_Test Shape: torch.Size([200, 64, 64, 10])

=== Data shape after reshaping based on [Batch, Channel, D1, D2, ...] ===

X_Train Shape: torch.Size([1000, 10, 10, 64, 64])
Y_Train Shape: torch.Size([1000, 1, 10, 64, 64])
X_Test Shape: torch.Size([200, 10, 10, 64, 64])
Y_Test Shape: torch.Size([200, 1, 10, 64, 64])

=== One batch of the Train Loader ===

Loader Type: <class 'torch.utils.data.dataloader.DataLoader'>
Batch Type: <class 'dict'>
Batch['x'].shape: torch.Size([10, 10, 10, 64, 64])
Batch['y'].shape: torch.Size([10, 1, 10, 64, 64])

=== One batch of the Test Loader ===

Loader Type: <class 'torch.utils.data.dataloader.DataLoader'>
Batch Type: <class 'dict'>
Batch['x'].shape: torch.Size([10, 10, 10, 64, 64])
Batch['y'].shape: torch.Size([10, 1, 10, 64, 64])

=== Device: cuda ===

======== Selected Kernel Description =======
Dimentionality: 3D
Transformation: [ Fourier Neural Operator (FNO) Kernel ]
>>> Overview:
The FNO leverages Fourier Transform to map input data into the spectral domain, where
convolutional operations are performed by truncating high-frequency modes.

>>> Key Features:
- Effective for parameterized Partial Differential Equations (PDEs).
- Reduces computational complexity by retaining only significant modes.

>>> Reference:
Li, Z. et al. 'Fourier Neural Operator for Parametric Partial Differential Equations' (ICLR 2021).
Link: https://arxiv.org/pdf/2010.08895
============================================

================== Config ==================
>>> Normaliztion: None
>>> Activation Function: 
============================================

Original Incre Res: change index to 0
Original Incre Res: change sub to 2
Original Incre Res: change res to 32

### N PARAMS ###
 13112941

### OPTIMIZER ###
 AdamW (
Parameter Group 0
    betas: (0.9, 0.999)
    correct_bias: True
    eps: 1e-06
    initial_lr: 0.001
    lr: 0.001
    weight_decay: 0.0001
)

### SCHEDULER ###
 <torch.optim.lr_scheduler.StepLR object at 0x7fe858b29130>

### LOSSES ###

### INCREMENTAL RESOLUTION + GRADIENT EXPLAINED ###

 * Train: <xno.losses.data_losses.H1Loss object at 0x7fe8617d4140>

 * Test: {'h1': <xno.losses.data_losses.H1Loss object at 0x7fe8617d4140>, 'l2': <xno.losses.data_losses.LpLoss object at 0x7fe858e93ef0>}
Training on 1000 samples
Testing on [200] samples         on resolutions [64].
Raw outputs of shape torch.Size([10, 1, 5, 64, 64])
[0] time=4.66, avg_loss=4.1887, train_err=41.8867
Eval: 64_h1=9.9368, 64_l2=9.7705
[Rank 0]: saved training state to save/3d_navier_stoke/fno/
[1] time=4.58, avg_loss=3.4266, train_err=34.2663
Eval: 64_h1=10.5646, 64_l2=10.8663
[2] time=4.22, avg_loss=3.1619, train_err=31.6187
Eval: 64_h1=10.8769, 64_l2=10.9407
[3] time=4.31, avg_loss=2.9990, train_err=29.9896
Eval: 64_h1=10.9887, 64_l2=10.7171
[4] time=4.05, avg_loss=2.8923, train_err=28.9230
Eval: 64_h1=11.1822, 64_l2=10.8025
[5] time=4.32, avg_loss=2.7979, train_err=27.9787
Eval: 64_h1=11.2941, 64_l2=10.8392
[6] time=3.94, avg_loss=2.7325, train_err=27.3246
Eval: 64_h1=11.3577, 64_l2=11.0037
[7] time=3.44, avg_loss=2.6718, train_err=26.7185
Eval: 64_h1=11.3911, 64_l2=11.0152
[8] time=4.09, avg_loss=2.6133, train_err=26.1326
Eval: 64_h1=11.3859, 64_l2=11.0785
[9] time=3.77, avg_loss=2.5689, train_err=25.6886
Eval: 64_h1=11.3504, 64_l2=11.1737
Incre Res Update: change index to 1
Incre Res Update: change sub to 1
Incre Res Update: change res to 64
[10] time=5.93, avg_loss=8.0093, train_err=80.0926
Eval: 64_h1=7.7695, 64_l2=5.6959
[11] time=8.74, avg_loss=6.8789, train_err=68.7890
Eval: 64_h1=7.0333, 64_l2=4.4497
[12] time=6.34, avg_loss=6.3221, train_err=63.2211
Eval: 64_h1=6.7887, 64_l2=4.3211
[13] time=5.55, avg_loss=6.0250, train_err=60.2500
Eval: 64_h1=6.5471, 64_l2=4.1235
[14] time=6.08, avg_loss=5.8089, train_err=58.0890
Eval: 64_h1=6.3812, 64_l2=3.9863
[15] time=6.59, avg_loss=5.6591, train_err=56.5914
Eval: 64_h1=6.4000, 64_l2=4.2339
[16] time=5.90, avg_loss=5.5282, train_err=55.2818
Eval: 64_h1=6.2134, 64_l2=3.9291
[17] time=6.35, avg_loss=5.4078, train_err=54.0784
Eval: 64_h1=6.0547, 64_l2=3.7471
[18] time=6.97, avg_loss=5.3141, train_err=53.1414
Eval: 64_h1=6.1532, 64_l2=4.0258
[19] time=6.10, avg_loss=5.2172, train_err=52.1720
Eval: 64_h1=5.9892, 64_l2=3.8523
Incre Res Update: change index to 2
Incre Res Update: change sub to 1
Incre Res Update: change res to 64
[20] time=6.40, avg_loss=5.1502, train_err=51.5020
Eval: 64_h1=5.9513, 64_l2=3.8621
[21] time=5.93, avg_loss=5.0602, train_err=50.6023
Eval: 64_h1=5.9306, 64_l2=3.8897
[22] time=6.00, avg_loss=5.0027, train_err=50.0271
Eval: 64_h1=5.7938, 64_l2=3.7572
[23] time=8.07, avg_loss=4.9586, train_err=49.5859
Eval: 64_h1=5.8479, 64_l2=3.8009
[24] time=7.51, avg_loss=4.9098, train_err=49.0979
Eval: 64_h1=5.7841, 64_l2=3.7413
[25] time=6.36, avg_loss=4.8333, train_err=48.3329
Eval: 64_h1=5.7579, 64_l2=3.8341
[26] time=6.69, avg_loss=4.7982, train_err=47.9824
Eval: 64_h1=5.7424, 64_l2=3.8287
[27] time=5.91, avg_loss=4.7599, train_err=47.5985
Eval: 64_h1=5.6886, 64_l2=3.7991
[28] time=6.30, avg_loss=4.7372, train_err=47.3717
Eval: 64_h1=5.6147, 64_l2=3.6896
[29] time=5.80, avg_loss=4.6846, train_err=46.8455
Eval: 64_h1=5.7457, 64_l2=3.8938
Incre Res Update: change index to 3
Incre Res Update: change sub to 1
Incre Res Update: change res to 64
[30] time=7.72, avg_loss=4.6473, train_err=46.4728
Eval: 64_h1=5.6466, 64_l2=3.8375
[31] time=6.11, avg_loss=4.6216, train_err=46.2157
Eval: 64_h1=5.6122, 64_l2=3.7197
[32] time=5.90, avg_loss=4.5788, train_err=45.7881
Eval: 64_h1=5.5841, 64_l2=3.6837
[33] time=5.96, avg_loss=4.5718, train_err=45.7180
Eval: 64_h1=5.6752, 64_l2=3.8935
[34] time=6.88, avg_loss=4.5261, train_err=45.2609
Eval: 64_h1=5.5749, 64_l2=3.7765
[35] time=7.12, avg_loss=4.5117, train_err=45.1168
Eval: 64_h1=5.5554, 64_l2=3.7273
[36] time=6.26, avg_loss=4.4671, train_err=44.6709
Eval: 64_h1=5.5209, 64_l2=3.7184
[37] time=8.03, avg_loss=4.4309, train_err=44.3089
Eval: 64_h1=5.5125, 64_l2=3.7669
[38] time=6.54, avg_loss=4.4087, train_err=44.0866
Eval: 64_h1=5.4836, 64_l2=3.6785
[39] time=6.32, avg_loss=4.4049, train_err=44.0491
Eval: 64_h1=5.5754, 64_l2=3.8761
Incre Res Update: change index to 4
Incre Res Update: change sub to 1
Incre Res Update: change res to 64
[40] time=6.25, avg_loss=4.3884, train_err=43.8835
Eval: 64_h1=5.5300, 64_l2=3.7605
[41] time=5.91, avg_loss=4.3517, train_err=43.5174
Eval: 64_h1=5.4723, 64_l2=3.7169
[42] time=6.13, avg_loss=4.3231, train_err=43.2309
Eval: 64_h1=5.4765, 64_l2=3.7515
[43] time=6.83, avg_loss=4.3158, train_err=43.1577
Eval: 64_h1=5.4716, 64_l2=3.8198
[44] time=7.59, avg_loss=4.3108, train_err=43.1083
Eval: 64_h1=5.4140, 64_l2=3.7050
[45] time=6.54, avg_loss=4.2646, train_err=42.6465
Eval: 64_h1=5.4557, 64_l2=3.7764
[46] time=6.98, avg_loss=4.2592, train_err=42.5925
Eval: 64_h1=5.4601, 64_l2=3.7523
[47] time=6.08, avg_loss=4.2447, train_err=42.4467
Eval: 64_h1=5.4273, 64_l2=3.7415
[48] time=7.63, avg_loss=4.2162, train_err=42.1615
Eval: 64_h1=5.3983, 64_l2=3.7084
[49] time=6.72, avg_loss=4.2062, train_err=42.0623
Eval: 64_h1=5.3953, 64_l2=3.7187
Incre Res Update: change index to 5
Incre Res Update: change sub to 1
Incre Res Update: change res to 64
[50] time=7.47, avg_loss=4.1880, train_err=41.8799
Eval: 64_h1=5.3638, 64_l2=3.6766
[Rank 0]: saved training state to save/3d_navier_stoke/fno/
[51] time=6.98, avg_loss=4.1581, train_err=41.5810
Eval: 64_h1=5.3622, 64_l2=3.7065
[52] time=6.69, avg_loss=4.1356, train_err=41.3564
Eval: 64_h1=5.3294, 64_l2=3.6347
[53] time=6.26, avg_loss=4.1310, train_err=41.3099
Eval: 64_h1=5.3181, 64_l2=3.6784
[54] time=6.78, avg_loss=4.1304, train_err=41.3038
Eval: 64_h1=5.3798, 64_l2=3.6658
[55] time=6.41, avg_loss=4.1002, train_err=41.0024
Eval: 64_h1=5.3446, 64_l2=3.6715
[56] time=6.79, avg_loss=4.1090, train_err=41.0904
Eval: 64_h1=5.3104, 64_l2=3.6691
[57] time=6.00, avg_loss=4.0775, train_err=40.7748
Eval: 64_h1=5.2570, 64_l2=3.6128
[58] time=6.78, avg_loss=4.0509, train_err=40.5090
Eval: 64_h1=5.3261, 64_l2=3.7436
[59] time=8.47, avg_loss=4.0312, train_err=40.3121
Eval: 64_h1=5.2986, 64_l2=3.6612
Incre Res Update: change index to 6
Incre Res Update: change sub to 1
Incre Res Update: change res to 64
[60] time=7.86, avg_loss=4.0498, train_err=40.4979
Eval: 64_h1=5.3556, 64_l2=3.8233
[61] time=8.08, avg_loss=4.0335, train_err=40.3353
Eval: 64_h1=5.3147, 64_l2=3.7547
[62] time=6.39, avg_loss=4.0206, train_err=40.2057
Eval: 64_h1=5.3119, 64_l2=3.7377
[63] time=7.25, avg_loss=3.9844, train_err=39.8438
Eval: 64_h1=5.3192, 64_l2=3.7594
[64] time=6.51, avg_loss=3.9829, train_err=39.8291
Eval: 64_h1=5.2828, 64_l2=3.6777
[65] time=6.55, avg_loss=3.9816, train_err=39.8159
Eval: 64_h1=5.2748, 64_l2=3.7094
[66] time=6.69, avg_loss=3.9619, train_err=39.6194
Eval: 64_h1=5.2151, 64_l2=3.6126
[67] time=6.73, avg_loss=3.9606, train_err=39.6057
Eval: 64_h1=5.2757, 64_l2=3.7116
[68] time=8.37, avg_loss=3.9654, train_err=39.6545
Eval: 64_h1=5.2488, 64_l2=3.7007
[69] time=6.34, avg_loss=3.9175, train_err=39.1753
Eval: 64_h1=5.2542, 64_l2=3.6795
Incre Res Update: change index to 7
Incre Res Update: change sub to 1
Incre Res Update: change res to 64
[70] time=7.49, avg_loss=3.8982, train_err=38.9825
Eval: 64_h1=5.2714, 64_l2=3.7517
[71] time=8.15, avg_loss=3.8971, train_err=38.9706
Eval: 64_h1=5.2269, 64_l2=3.6482
[72] time=7.67, avg_loss=3.8845, train_err=38.8455
Eval: 64_h1=5.3185, 64_l2=3.6909
[73] time=6.45, avg_loss=3.8713, train_err=38.7134
Eval: 64_h1=5.2332, 64_l2=3.6687
[74] time=6.62, avg_loss=3.8596, train_err=38.5963
Eval: 64_h1=5.1892, 64_l2=3.6711
[75] time=6.14, avg_loss=3.8621, train_err=38.6211
Eval: 64_h1=5.2394, 64_l2=3.6655
[76] time=6.67, avg_loss=3.8629, train_err=38.6288
Eval: 64_h1=5.2407, 64_l2=3.7358
[77] time=6.67, avg_loss=3.8525, train_err=38.5254
Eval: 64_h1=5.2207, 64_l2=3.7156
[78] time=7.31, avg_loss=3.8355, train_err=38.3554
Eval: 64_h1=5.2160, 64_l2=3.6942
[79] time=6.04, avg_loss=3.8104, train_err=38.1040
Eval: 64_h1=5.1951, 64_l2=3.6923
Incre Res Update: change index to 8
Incre Res Update: change sub to 1
Incre Res Update: change res to 64
[80] time=6.62, avg_loss=3.8302, train_err=38.3018
Eval: 64_h1=5.2102, 64_l2=3.7249
[81] time=6.95, avg_loss=3.8076, train_err=38.0764
Eval: 64_h1=5.2397, 64_l2=3.7940
[82] time=6.51, avg_loss=3.7943, train_err=37.9426
Eval: 64_h1=5.1879, 64_l2=3.6335
[83] time=7.37, avg_loss=3.7867, train_err=37.8669
Eval: 64_h1=5.2298, 64_l2=3.6792
[84] time=6.47, avg_loss=3.7674, train_err=37.6740
Eval: 64_h1=5.2110, 64_l2=3.7846
[85] time=7.01, avg_loss=3.7653, train_err=37.6528
Eval: 64_h1=5.1567, 64_l2=3.6088
[86] time=7.67, avg_loss=3.7658, train_err=37.6580
Eval: 64_h1=5.1606, 64_l2=3.6797
[87] time=6.39, avg_loss=3.7643, train_err=37.6433
Eval: 64_h1=5.1801, 64_l2=3.6337
[88] time=7.84, avg_loss=3.7438, train_err=37.4379
Eval: 64_h1=5.2399, 64_l2=3.6820
[89] time=5.90, avg_loss=3.7444, train_err=37.4438
Eval: 64_h1=5.1606, 64_l2=3.6845
Incre Res Update: change index to 9
Incre Res Update: change sub to 1
Incre Res Update: change res to 64
[90] time=8.31, avg_loss=3.7301, train_err=37.3013
Eval: 64_h1=5.1703, 64_l2=3.7163
[91] time=7.24, avg_loss=3.7116, train_err=37.1156
Eval: 64_h1=5.1715, 64_l2=3.6833
[92] time=8.45, avg_loss=3.7081, train_err=37.0815
Eval: 64_h1=5.1202, 64_l2=3.6125
[93] time=8.30, avg_loss=3.6959, train_err=36.9585
Eval: 64_h1=5.1791, 64_l2=3.7322
[94] time=6.46, avg_loss=3.6851, train_err=36.8508
Eval: 64_h1=5.1696, 64_l2=3.6803
[95] time=5.96, avg_loss=3.6838, train_err=36.8382
Eval: 64_h1=5.1533, 64_l2=3.6658
[96] time=6.99, avg_loss=3.6896, train_err=36.8963
Eval: 64_h1=5.1535, 64_l2=3.6746
[97] time=7.64, avg_loss=3.6787, train_err=36.7873
Eval: 64_h1=5.1743, 64_l2=3.6707
[98] time=7.61, avg_loss=3.6729, train_err=36.7293
Eval: 64_h1=5.2535, 64_l2=3.7951
[99] time=8.18, avg_loss=3.6461, train_err=36.4614
Eval: 64_h1=5.1245, 64_l2=3.6219
Incre Res Update: change index to 10
Incre Res Update: change sub to 1
Incre Res Update: change res to 64
[100] time=7.39, avg_loss=3.5866, train_err=35.8665
Eval: 64_h1=5.1234, 64_l2=3.6558
[Rank 0]: saved training state to save/3d_navier_stoke/fno/
[101] time=7.01, avg_loss=3.5790, train_err=35.7895
Eval: 64_h1=5.1136, 64_l2=3.6568
[102] time=6.00, avg_loss=3.5710, train_err=35.7096
Eval: 64_h1=5.1210, 64_l2=3.6788
[103] time=5.73, avg_loss=3.5675, train_err=35.6754
Eval: 64_h1=5.1147, 64_l2=3.6561
[104] time=5.91, avg_loss=3.5677, train_err=35.6771
Eval: 64_h1=5.1284, 64_l2=3.6899
[105] time=6.87, avg_loss=3.5592, train_err=35.5920
Eval: 64_h1=5.1124, 64_l2=3.6583
[106] time=7.43, avg_loss=3.5567, train_err=35.5675
Eval: 64_h1=5.1145, 64_l2=3.6963
[107] time=5.90, avg_loss=3.5519, train_err=35.5186
Eval: 64_h1=5.1025, 64_l2=3.6549
[108] time=5.88, avg_loss=3.5513, train_err=35.5126
Eval: 64_h1=5.0838, 64_l2=3.6217
[109] time=8.06, avg_loss=3.5492, train_err=35.4922
Eval: 64_h1=5.0969, 64_l2=3.6380
Incre Res Update: change index to 11
Incre Res Update: change sub to 1
Incre Res Update: change res to 64
[110] time=8.31, avg_loss=3.5469, train_err=35.4686
Eval: 64_h1=5.1328, 64_l2=3.7023
[111] time=7.23, avg_loss=3.5378, train_err=35.3780
Eval: 64_h1=5.0893, 64_l2=3.6257
[112] time=7.99, avg_loss=3.5395, train_err=35.3955
Eval: 64_h1=5.1062, 64_l2=3.6649
[113] time=6.86, avg_loss=3.5298, train_err=35.2975
Eval: 64_h1=5.0912, 64_l2=3.6431
[114] time=6.11, avg_loss=3.5275, train_err=35.2755
Eval: 64_h1=5.0925, 64_l2=3.6580
[115] time=6.86, avg_loss=3.5287, train_err=35.2866
Eval: 64_h1=5.0776, 64_l2=3.6055
[116] time=7.25, avg_loss=3.5279, train_err=35.2794
Eval: 64_h1=5.0782, 64_l2=3.6325
[117] time=6.27, avg_loss=3.5144, train_err=35.1437
Eval: 64_h1=5.0809, 64_l2=3.6556
[118] time=7.00, avg_loss=3.5107, train_err=35.1074
Eval: 64_h1=5.1054, 64_l2=3.6404
[119] time=7.62, avg_loss=3.5121, train_err=35.1215
Eval: 64_h1=5.0656, 64_l2=3.6464
Incre Res Update: change index to 12
Incre Res Update: change sub to 1
Incre Res Update: change res to 64
[120] time=7.19, avg_loss=3.5083, train_err=35.0832
Eval: 64_h1=5.0803, 64_l2=3.6201
[121] time=6.87, avg_loss=3.5069, train_err=35.0692
Eval: 64_h1=5.0846, 64_l2=3.6373
[122] time=6.80, avg_loss=3.5013, train_err=35.0129
Eval: 64_h1=5.0910, 64_l2=3.6710
[123] time=6.85, avg_loss=3.5164, train_err=35.1636
Eval: 64_h1=5.0634, 64_l2=3.6080
[124] time=8.11, avg_loss=3.4962, train_err=34.9620
Eval: 64_h1=5.0657, 64_l2=3.6567
[125] time=5.91, avg_loss=3.4854, train_err=34.8543
Eval: 64_h1=5.0991, 64_l2=3.6747
[126] time=6.99, avg_loss=3.4820, train_err=34.8201
Eval: 64_h1=5.1019, 64_l2=3.6652
[127] time=7.29, avg_loss=3.4795, train_err=34.7945
Eval: 64_h1=5.0896, 64_l2=3.6764
[128] time=8.64, avg_loss=3.4732, train_err=34.7318
Eval: 64_h1=5.0861, 64_l2=3.7098
[129] time=6.85, avg_loss=3.4748, train_err=34.7483
Eval: 64_h1=5.0934, 64_l2=3.6556
Incre Res Update: change index to 13
Incre Res Update: change sub to 1
Incre Res Update: change res to 64
[130] time=6.13, avg_loss=3.4773, train_err=34.7725
Eval: 64_h1=5.0876, 64_l2=3.6694
[131] time=6.52, avg_loss=3.4583, train_err=34.5828
Eval: 64_h1=5.0775, 64_l2=3.6621
[132] time=6.94, avg_loss=3.4550, train_err=34.5497
Eval: 64_h1=5.0787, 64_l2=3.6725
[133] time=6.53, avg_loss=3.4553, train_err=34.5528
Eval: 64_h1=5.0425, 64_l2=3.6167
[134] time=6.24, avg_loss=3.4586, train_err=34.5862
Eval: 64_h1=5.0574, 64_l2=3.6746
[135] time=5.99, avg_loss=3.4513, train_err=34.5128
Eval: 64_h1=5.0799, 64_l2=3.6464
[136] time=6.82, avg_loss=3.4438, train_err=34.4377
Eval: 64_h1=5.0649, 64_l2=3.6534
[137] time=8.01, avg_loss=3.4467, train_err=34.4666
Eval: 64_h1=5.0809, 64_l2=3.6403
[138] time=5.98, avg_loss=3.4370, train_err=34.3696
Eval: 64_h1=5.0731, 64_l2=3.6768
[139] time=6.90, avg_loss=3.4547, train_err=34.5466
Eval: 64_h1=5.0725, 64_l2=3.6538
Incre Res Update: change index to 14
Incre Res Update: change sub to 1
Incre Res Update: change res to 64
[140] time=7.52, avg_loss=3.4340, train_err=34.3400
Eval: 64_h1=5.0605, 64_l2=3.6509
[141] time=7.55, avg_loss=3.4364, train_err=34.3641
Eval: 64_h1=5.0795, 64_l2=3.6553
[142] time=6.74, avg_loss=3.4268, train_err=34.2676
Eval: 64_h1=5.0485, 64_l2=3.6036
[143] time=6.25, avg_loss=3.4281, train_err=34.2813
Eval: 64_h1=5.0721, 64_l2=3.6614
[144] time=7.63, avg_loss=3.4263, train_err=34.2634
Eval: 64_h1=5.0699, 64_l2=3.6691
[145] time=7.44, avg_loss=3.4160, train_err=34.1603
Eval: 64_h1=5.0649, 64_l2=3.6651
[146] time=6.95, avg_loss=3.4160, train_err=34.1597
Eval: 64_h1=5.0849, 64_l2=3.6846
[147] time=7.80, avg_loss=3.4068, train_err=34.0679
Eval: 64_h1=5.0683, 64_l2=3.6717
[148] time=7.52, avg_loss=3.4072, train_err=34.0717
Eval: 64_h1=5.0740, 64_l2=3.6627
[149] time=6.75, avg_loss=3.4037, train_err=34.0371
Eval: 64_h1=5.0720, 64_l2=3.6646
Incre Res Update: change index to 15
Incre Res Update: change sub to 1
Incre Res Update: change res to 64
[150] time=6.24, avg_loss=3.4005, train_err=34.0053
Eval: 64_h1=5.0500, 64_l2=3.6416
[Rank 0]: saved training state to save/3d_navier_stoke/fno/
[151] time=7.57, avg_loss=3.4128, train_err=34.1281
Eval: 64_h1=5.0482, 64_l2=3.6371
[152] time=6.70, avg_loss=3.3920, train_err=33.9204
Eval: 64_h1=5.0473, 64_l2=3.6311
[153] time=7.93, avg_loss=3.3873, train_err=33.8733
Eval: 64_h1=5.0685, 64_l2=3.6861
[154] time=6.19, avg_loss=3.3910, train_err=33.9098
Eval: 64_h1=5.0733, 64_l2=3.6781
[155] time=5.69, avg_loss=3.3934, train_err=33.9341
Eval: 64_h1=5.0528, 64_l2=3.6769
[156] time=5.72, avg_loss=3.3822, train_err=33.8221
Eval: 64_h1=5.0578, 64_l2=3.6870
[157] time=5.95, avg_loss=3.3780, train_err=33.7803
Eval: 64_h1=5.0604, 64_l2=3.6439
[158] time=6.67, avg_loss=3.3702, train_err=33.7020
Eval: 64_h1=5.0280, 64_l2=3.6451
[159] time=7.88, avg_loss=3.3730, train_err=33.7299
Eval: 64_h1=5.0579, 64_l2=3.6776
Incre Res Update: change index to 16
Incre Res Update: change sub to 1
Incre Res Update: change res to 64
[160] time=7.50, avg_loss=3.3795, train_err=33.7947
Eval: 64_h1=5.0309, 64_l2=3.6417
[161] time=6.53, avg_loss=3.3702, train_err=33.7022
Eval: 64_h1=5.0468, 64_l2=3.6863
[162] time=5.91, avg_loss=3.3646, train_err=33.6459
Eval: 64_h1=5.0608, 64_l2=3.6680
[163] time=7.28, avg_loss=3.3700, train_err=33.7002
Eval: 64_h1=5.0416, 64_l2=3.6098
[164] time=7.18, avg_loss=3.3664, train_err=33.6645
Eval: 64_h1=5.0183, 64_l2=3.6265
[165] time=7.53, avg_loss=3.3544, train_err=33.5442
Eval: 64_h1=5.0358, 64_l2=3.6667
[166] time=6.88, avg_loss=3.3560, train_err=33.5604
Eval: 64_h1=5.0401, 64_l2=3.6562
[167] time=7.60, avg_loss=3.3495, train_err=33.4951
Eval: 64_h1=5.0506, 64_l2=3.6416
[168] time=6.85, avg_loss=3.3503, train_err=33.5027
Eval: 64_h1=5.0158, 64_l2=3.6034
[169] time=8.20, avg_loss=3.3518, train_err=33.5181
Eval: 64_h1=5.0248, 64_l2=3.6240
Incre Res Update: change index to 17
Incre Res Update: change sub to 1
Incre Res Update: change res to 64
[170] time=6.52, avg_loss=3.3498, train_err=33.4985
Eval: 64_h1=5.0491, 64_l2=3.6625
[171] time=6.88, avg_loss=3.3490, train_err=33.4897
Eval: 64_h1=5.0426, 64_l2=3.6559
[172] time=7.07, avg_loss=3.3349, train_err=33.3492
Eval: 64_h1=5.0303, 64_l2=3.6332
[173] time=7.19, avg_loss=3.3276, train_err=33.2764
Eval: 64_h1=5.0042, 64_l2=3.5918
[174] time=5.85, avg_loss=3.3254, train_err=33.2543
Eval: 64_h1=5.0105, 64_l2=3.6294
[175] time=6.37, avg_loss=3.3242, train_err=33.2420
Eval: 64_h1=5.0114, 64_l2=3.6117
[176] time=7.24, avg_loss=3.3281, train_err=33.2814
Eval: 64_h1=5.0208, 64_l2=3.6237
[177] time=7.80, avg_loss=3.3215, train_err=33.2150
Eval: 64_h1=5.0747, 64_l2=3.7222
[178] time=5.89, avg_loss=3.3239, train_err=33.2388
Eval: 64_h1=5.0389, 64_l2=3.6753
[179] time=6.84, avg_loss=3.3170, train_err=33.1699
Eval: 64_h1=5.0443, 64_l2=3.6872
Incre Res Update: change index to 18
Incre Res Update: change sub to 1
Incre Res Update: change res to 64
[180] time=6.39, avg_loss=3.3124, train_err=33.1241
Eval: 64_h1=5.0227, 64_l2=3.6357
[181] time=6.76, avg_loss=3.3188, train_err=33.1883
Eval: 64_h1=5.0302, 64_l2=3.6372
[182] time=6.61, avg_loss=3.3117, train_err=33.1171
Eval: 64_h1=5.0069, 64_l2=3.6066
[183] time=6.91, avg_loss=3.3082, train_err=33.0821
Eval: 64_h1=5.0894, 64_l2=3.7446
[184] time=6.62, avg_loss=3.3044, train_err=33.0442
Eval: 64_h1=5.0197, 64_l2=3.6354
[185] time=5.92, avg_loss=3.3047, train_err=33.0470
Eval: 64_h1=5.0359, 64_l2=3.6891
[186] time=6.66, avg_loss=3.2988, train_err=32.9877
Eval: 64_h1=5.0306, 64_l2=3.6469
[187] time=7.07, avg_loss=3.3000, train_err=32.9997
Eval: 64_h1=5.0513, 64_l2=3.7163
[188] time=6.56, avg_loss=3.3129, train_err=33.1292
Eval: 64_h1=5.0168, 64_l2=3.6328
[189] time=7.53, avg_loss=3.2883, train_err=32.8828
Eval: 64_h1=5.0320, 64_l2=3.6541
Incre Res Update: change index to 19
Incre Res Update: change sub to 1
Incre Res Update: change res to 64
[190] time=6.47, avg_loss=3.2832, train_err=32.8323
Eval: 64_h1=5.0072, 64_l2=3.6184
[191] time=5.97, avg_loss=3.2843, train_err=32.8432
Eval: 64_h1=5.0356, 64_l2=3.6325
[192] time=7.75, avg_loss=3.2835, train_err=32.8350
Eval: 64_h1=4.9990, 64_l2=3.6456
[193] time=7.81, avg_loss=3.2786, train_err=32.7859
Eval: 64_h1=5.0295, 64_l2=3.6412
[194] time=6.79, avg_loss=3.2841, train_err=32.8407
Eval: 64_h1=5.0059, 64_l2=3.6107
[195] time=8.00, avg_loss=3.2775, train_err=32.7747
Eval: 64_h1=5.0113, 64_l2=3.6734
[196] time=7.15, avg_loss=3.2760, train_err=32.7600
Eval: 64_h1=5.0048, 64_l2=3.6041
[197] time=5.57, avg_loss=3.2708, train_err=32.7078
Eval: 64_h1=5.0110, 64_l2=3.6175
[198] time=5.51, avg_loss=3.2686, train_err=32.6855
Eval: 64_h1=4.9996, 64_l2=3.5918
[199] time=5.97, avg_loss=3.2665, train_err=32.6651
Eval: 64_h1=5.0096, 64_l2=3.6191
Incre Res Update: change index to 20
Incre Res Update: change sub to 1
Incre Res Update: change res to 64
[200] time=6.51, avg_loss=3.2416, train_err=32.4162
Eval: 64_h1=4.9978, 64_l2=3.6367
[Rank 0]: saved training state to save/3d_navier_stoke/fno/
[201] time=7.18, avg_loss=3.2365, train_err=32.3654
Eval: 64_h1=5.0044, 64_l2=3.6324
[202] time=7.00, avg_loss=3.2353, train_err=32.3529
Eval: 64_h1=5.0045, 64_l2=3.6314
[203] time=6.79, avg_loss=3.2338, train_err=32.3380
Eval: 64_h1=5.0160, 64_l2=3.6402
[204] time=6.32, avg_loss=3.2333, train_err=32.3330
Eval: 64_h1=4.9996, 64_l2=3.6157
[205] time=7.14, avg_loss=3.2331, train_err=32.3311
Eval: 64_h1=5.0003, 64_l2=3.6073
[206] time=6.68, avg_loss=3.2294, train_err=32.2945
Eval: 64_h1=5.0052, 64_l2=3.6308
[207] time=6.57, avg_loss=3.2293, train_err=32.2932
Eval: 64_h1=5.0056, 64_l2=3.6375
[208] time=7.64, avg_loss=3.2277, train_err=32.2767
Eval: 64_h1=4.9977, 64_l2=3.6377
[209] time=7.41, avg_loss=3.2250, train_err=32.2499
Eval: 64_h1=5.0089, 64_l2=3.6406
Incre Res Update: change index to 21
Incre Res Update: change sub to 1
Incre Res Update: change res to 64
[210] time=7.62, avg_loss=3.2246, train_err=32.2457
Eval: 64_h1=5.0154, 64_l2=3.6566
[211] time=7.11, avg_loss=3.2255, train_err=32.2548
Eval: 64_h1=4.9981, 64_l2=3.6353
[212] time=6.93, avg_loss=3.2252, train_err=32.2517
Eval: 64_h1=5.0006, 64_l2=3.6377
[213] time=7.76, avg_loss=3.2235, train_err=32.2347
Eval: 64_h1=4.9976, 64_l2=3.6224
[214] time=9.46, avg_loss=3.2204, train_err=32.2045
Eval: 64_h1=4.9968, 64_l2=3.6312
[215] time=6.03, avg_loss=3.2186, train_err=32.1858
Eval: 64_h1=5.0099, 64_l2=3.6298
[216] time=6.09, avg_loss=3.2185, train_err=32.1855
Eval: 64_h1=5.0130, 64_l2=3.6423
[217] time=5.64, avg_loss=3.2172, train_err=32.1716
Eval: 64_h1=4.9925, 64_l2=3.6288
[218] time=6.60, avg_loss=3.2184, train_err=32.1835
Eval: 64_h1=5.0105, 64_l2=3.6560
[219] time=5.67, avg_loss=3.2168, train_err=32.1683
Eval: 64_h1=5.0192, 64_l2=3.6183
Incre Res Update: change index to 22
Incre Res Update: change sub to 1
Incre Res Update: change res to 64
[220] time=6.51, avg_loss=3.2127, train_err=32.1272
Eval: 64_h1=5.0140, 64_l2=3.6421
[221] time=8.07, avg_loss=3.2125, train_err=32.1248
Eval: 64_h1=4.9920, 64_l2=3.6227
[222] time=6.73, avg_loss=3.2129, train_err=32.1287
Eval: 64_h1=4.9977, 64_l2=3.6424
[223] time=5.58, avg_loss=3.2108, train_err=32.1084
Eval: 64_h1=5.0071, 64_l2=3.6372
[224] time=6.25, avg_loss=3.2083, train_err=32.0826
Eval: 64_h1=4.9982, 64_l2=3.6359
[225] time=6.30, avg_loss=3.2063, train_err=32.0634
Eval: 64_h1=4.9881, 64_l2=3.6412
[226] time=5.61, avg_loss=3.2066, train_err=32.0659
Eval: 64_h1=4.9723, 64_l2=3.5892
[227] time=7.57, avg_loss=3.2032, train_err=32.0319
Eval: 64_h1=4.9818, 64_l2=3.6041
[228] time=7.77, avg_loss=3.2023, train_err=32.0234
Eval: 64_h1=4.9897, 64_l2=3.6160
[229] time=6.31, avg_loss=3.2031, train_err=32.0313
Eval: 64_h1=4.9917, 64_l2=3.6088
Incre Res Update: change index to 23
Incre Res Update: change sub to 1
Incre Res Update: change res to 64
[230] time=5.89, avg_loss=3.2045, train_err=32.0452
Eval: 64_h1=5.0047, 64_l2=3.6471
[231] time=7.21, avg_loss=3.2006, train_err=32.0060
Eval: 64_h1=4.9832, 64_l2=3.6280
[232] time=7.39, avg_loss=3.1987, train_err=31.9869
Eval: 64_h1=4.9946, 64_l2=3.6143
[233] time=5.95, avg_loss=3.1972, train_err=31.9716
Eval: 64_h1=4.9816, 64_l2=3.6004
[234] time=7.39, avg_loss=3.1940, train_err=31.9400
Eval: 64_h1=4.9953, 64_l2=3.6288
[235] time=6.93, avg_loss=3.1945, train_err=31.9446
Eval: 64_h1=5.0081, 64_l2=3.6539
[236] time=6.57, avg_loss=3.1927, train_err=31.9270
Eval: 64_h1=4.9850, 64_l2=3.6186
[237] time=7.01, avg_loss=3.1910, train_err=31.9099
Eval: 64_h1=5.0062, 64_l2=3.6375
[238] time=7.14, avg_loss=3.1899, train_err=31.8992
Eval: 64_h1=4.9765, 64_l2=3.6028
[239] time=6.73, avg_loss=3.1890, train_err=31.8899
Eval: 64_h1=4.9849, 64_l2=3.6170
Incre Res Update: change index to 24
Incre Res Update: change sub to 1
Incre Res Update: change res to 64
[240] time=5.44, avg_loss=3.1881, train_err=31.8806
Eval: 64_h1=4.9814, 64_l2=3.6093
[241] time=5.65, avg_loss=3.1861, train_err=31.8610
Eval: 64_h1=4.9889, 64_l2=3.6158
[242] time=5.49, avg_loss=3.1874, train_err=31.8738
Eval: 64_h1=4.9807, 64_l2=3.6431
[243] time=5.47, avg_loss=3.1834, train_err=31.8337
Eval: 64_h1=4.9964, 64_l2=3.6408
[244] time=5.96, avg_loss=3.1834, train_err=31.8341
Eval: 64_h1=4.9979, 64_l2=3.6362
[245] time=6.70, avg_loss=3.1817, train_err=31.8169
Eval: 64_h1=4.9787, 64_l2=3.6172
[246] time=7.89, avg_loss=3.1791, train_err=31.7911
Eval: 64_h1=4.9746, 64_l2=3.5983
[247] time=7.59, avg_loss=3.1840, train_err=31.8402
Eval: 64_h1=4.9870, 64_l2=3.6453
[248] time=7.46, avg_loss=3.1790, train_err=31.7903
Eval: 64_h1=4.9931, 64_l2=3.6364
[249] time=7.42, avg_loss=3.1759, train_err=31.7585
Eval: 64_h1=4.9915, 64_l2=3.6090
Incre Res Update: change index to 25
Incre Res Update: change sub to 1
Incre Res Update: change res to 64
[250] time=8.83, avg_loss=3.1776, train_err=31.7763
Eval: 64_h1=5.0003, 64_l2=3.6424
[Rank 0]: saved training state to save/3d_navier_stoke/fno/
[251] time=6.99, avg_loss=3.1719, train_err=31.7187
Eval: 64_h1=4.9889, 64_l2=3.6269
[252] time=8.19, avg_loss=3.1725, train_err=31.7246
Eval: 64_h1=4.9811, 64_l2=3.6098
[253] time=6.19, avg_loss=3.1709, train_err=31.7089
Eval: 64_h1=4.9702, 64_l2=3.6124
[254] time=6.24, avg_loss=3.1711, train_err=31.7112
Eval: 64_h1=4.9896, 64_l2=3.6316
[255] time=7.43, avg_loss=3.1685, train_err=31.6848
Eval: 64_h1=5.0016, 64_l2=3.6340
[256] time=5.91, avg_loss=3.1685, train_err=31.6845
Eval: 64_h1=4.9786, 64_l2=3.5875
[257] time=6.08, avg_loss=3.1666, train_err=31.6655
Eval: 64_h1=4.9823, 64_l2=3.6339
[258] time=7.97, avg_loss=3.1645, train_err=31.6450
Eval: 64_h1=4.9758, 64_l2=3.5937
[259] time=6.79, avg_loss=3.1646, train_err=31.6460
Eval: 64_h1=4.9862, 64_l2=3.6315
Incre Res Update: change index to 26
Incre Res Update: change sub to 1
Incre Res Update: change res to 64
[260] time=7.08, avg_loss=3.1628, train_err=31.6277
Eval: 64_h1=4.9705, 64_l2=3.5913
[261] time=7.61, avg_loss=3.1617, train_err=31.6172
Eval: 64_h1=4.9626, 64_l2=3.6036
[262] time=5.95, avg_loss=3.1603, train_err=31.6027
Eval: 64_h1=4.9898, 64_l2=3.6323
[263] time=5.67, avg_loss=3.1598, train_err=31.5983
Eval: 64_h1=4.9673, 64_l2=3.6048
[264] time=6.47, avg_loss=3.1570, train_err=31.5698
Eval: 64_h1=4.9742, 64_l2=3.6011
[265] time=7.90, avg_loss=3.1578, train_err=31.5777
Eval: 64_h1=4.9704, 64_l2=3.5899
[266] time=6.25, avg_loss=3.1547, train_err=31.5468
Eval: 64_h1=4.9707, 64_l2=3.6043
[267] time=5.94, avg_loss=3.1539, train_err=31.5390
Eval: 64_h1=5.0102, 64_l2=3.6663
[268] time=6.19, avg_loss=3.1532, train_err=31.5325
Eval: 64_h1=4.9952, 64_l2=3.6535
[269] time=7.01, avg_loss=3.1534, train_err=31.5341
Eval: 64_h1=4.9897, 64_l2=3.6242
Incre Res Update: change index to 27
Incre Res Update: change sub to 1
Incre Res Update: change res to 64
[270] time=6.58, avg_loss=3.1500, train_err=31.4997
Eval: 64_h1=4.9898, 64_l2=3.6280
[271] time=6.03, avg_loss=3.1477, train_err=31.4775
Eval: 64_h1=4.9789, 64_l2=3.6429
[272] time=6.97, avg_loss=3.1495, train_err=31.4948
Eval: 64_h1=4.9897, 64_l2=3.6469
[273] time=6.59, avg_loss=3.1487, train_err=31.4868
Eval: 64_h1=4.9615, 64_l2=3.5782
[274] time=6.54, avg_loss=3.1449, train_err=31.4488
Eval: 64_h1=4.9867, 64_l2=3.6413
[275] time=6.24, avg_loss=3.1466, train_err=31.4658
Eval: 64_h1=4.9772, 64_l2=3.6240
[276] time=5.87, avg_loss=3.1429, train_err=31.4289
Eval: 64_h1=4.9730, 64_l2=3.6281
[277] time=7.71, avg_loss=3.1429, train_err=31.4290
Eval: 64_h1=5.0002, 64_l2=3.6507
[278] time=8.14, avg_loss=3.1406, train_err=31.4058
Eval: 64_h1=4.9731, 64_l2=3.6033
[279] time=6.96, avg_loss=3.1391, train_err=31.3913
Eval: 64_h1=4.9885, 64_l2=3.6135
Incre Res Update: change index to 28
Incre Res Update: change sub to 1
Incre Res Update: change res to 64
[280] time=7.15, avg_loss=3.1414, train_err=31.4141
Eval: 64_h1=4.9695, 64_l2=3.6223
[281] time=6.89, avg_loss=3.1422, train_err=31.4220
Eval: 64_h1=4.9963, 64_l2=3.6130
[282] time=6.94, avg_loss=3.1378, train_err=31.3775
Eval: 64_h1=5.0047, 64_l2=3.6728
[283] time=7.08, avg_loss=3.1352, train_err=31.3521
Eval: 64_h1=4.9837, 64_l2=3.6171
[284] time=7.61, avg_loss=3.1326, train_err=31.3259
Eval: 64_h1=5.0009, 64_l2=3.6585
[285] time=5.84, avg_loss=3.1348, train_err=31.3476
Eval: 64_h1=4.9715, 64_l2=3.6023
[286] time=6.20, avg_loss=3.1346, train_err=31.3456
Eval: 64_h1=4.9643, 64_l2=3.5934
[287] time=7.15, avg_loss=3.1295, train_err=31.2953
Eval: 64_h1=4.9749, 64_l2=3.6081
[288] time=8.34, avg_loss=3.1310, train_err=31.3097
Eval: 64_h1=4.9642, 64_l2=3.5778
[289] time=6.95, avg_loss=3.1268, train_err=31.2678
Eval: 64_h1=4.9920, 64_l2=3.6605
Incre Res Update: change index to 29
Incre Res Update: change sub to 1
Incre Res Update: change res to 64
[290] time=7.27, avg_loss=3.1278, train_err=31.2783
Eval: 64_h1=4.9739, 64_l2=3.5971
[291] time=6.07, avg_loss=3.1268, train_err=31.2676
Eval: 64_h1=4.9797, 64_l2=3.6179
[292] time=6.51, avg_loss=3.1251, train_err=31.2507
Eval: 64_h1=4.9853, 64_l2=3.6348
[293] time=8.10, avg_loss=3.1251, train_err=31.2514
Eval: 64_h1=4.9808, 64_l2=3.6345
[294] time=7.02, avg_loss=3.1231, train_err=31.2306
Eval: 64_h1=4.9727, 64_l2=3.6124
[295] time=7.62, avg_loss=3.1214, train_err=31.2137
Eval: 64_h1=4.9567, 64_l2=3.5778
[296] time=7.71, avg_loss=3.1204, train_err=31.2036
Eval: 64_h1=4.9811, 64_l2=3.6439
[297] time=6.90, avg_loss=3.1185, train_err=31.1847
Eval: 64_h1=4.9807, 64_l2=3.6236
[298] time=7.92, avg_loss=3.1176, train_err=31.1763
Eval: 64_h1=4.9649, 64_l2=3.5743
[299] time=6.78, avg_loss=3.1225, train_err=31.2251
Eval: 64_h1=4.9635, 64_l2=3.6016
Incre Res Update: change index to 30
Incre Res Update: change sub to 1
Incre Res Update: change res to 64
[300] time=6.38, avg_loss=3.1067, train_err=31.0671
Eval: 64_h1=4.9852, 64_l2=3.6385
[Rank 0]: saved training state to save/3d_navier_stoke/fno/
[301] time=5.89, avg_loss=3.1039, train_err=31.0391
Eval: 64_h1=4.9695, 64_l2=3.6115
[302] time=6.76, avg_loss=3.1033, train_err=31.0331
Eval: 64_h1=4.9725, 64_l2=3.6219
[303] time=6.88, avg_loss=3.1040, train_err=31.0401
Eval: 64_h1=4.9684, 64_l2=3.6144
[304] time=7.12, avg_loss=3.1024, train_err=31.0241
Eval: 64_h1=4.9806, 64_l2=3.6296
[305] time=7.35, avg_loss=3.1013, train_err=31.0134
Eval: 64_h1=4.9558, 64_l2=3.5903
[306] time=7.33, avg_loss=3.1014, train_err=31.0139
Eval: 64_h1=4.9710, 64_l2=3.6222
[307] time=7.09, avg_loss=3.1005, train_err=31.0046
Eval: 64_h1=4.9658, 64_l2=3.6006
[308] time=6.29, avg_loss=3.1005, train_err=31.0047
Eval: 64_h1=4.9701, 64_l2=3.6095
[309] time=5.77, avg_loss=3.1000, train_err=30.9997
Eval: 64_h1=4.9788, 64_l2=3.6191
Incre Res Update: change index to 31
Incre Res Update: change sub to 1
Incre Res Update: change res to 64
[310] time=5.81, avg_loss=3.0995, train_err=30.9954
Eval: 64_h1=4.9792, 64_l2=3.6266
[311] time=5.87, avg_loss=3.0994, train_err=30.9941
Eval: 64_h1=4.9690, 64_l2=3.6194
[312] time=6.76, avg_loss=3.0993, train_err=30.9927
Eval: 64_h1=4.9695, 64_l2=3.5993
[313] time=6.79, avg_loss=3.0976, train_err=30.9757
Eval: 64_h1=4.9818, 64_l2=3.6387
[314] time=7.10, avg_loss=3.0976, train_err=30.9763
Eval: 64_h1=4.9725, 64_l2=3.6148
[315] time=6.12, avg_loss=3.0974, train_err=30.9739
Eval: 64_h1=4.9723, 64_l2=3.6245
[316] time=5.94, avg_loss=3.0968, train_err=30.9681
Eval: 64_h1=4.9665, 64_l2=3.5968
[317] time=6.80, avg_loss=3.0955, train_err=30.9545
Eval: 64_h1=4.9702, 64_l2=3.6135
[318] time=7.19, avg_loss=3.0957, train_err=30.9566
Eval: 64_h1=4.9733, 64_l2=3.6252
[319] time=5.78, avg_loss=3.0948, train_err=30.9477
Eval: 64_h1=4.9673, 64_l2=3.6065
Incre Res Update: change index to 32
Incre Res Update: change sub to 1
Incre Res Update: change res to 64
[320] time=8.16, avg_loss=3.0937, train_err=30.9373
Eval: 64_h1=4.9712, 64_l2=3.6109
[321] time=7.46, avg_loss=3.0935, train_err=30.9351
Eval: 64_h1=4.9772, 64_l2=3.6221
[322] time=6.29, avg_loss=3.0926, train_err=30.9264
Eval: 64_h1=4.9672, 64_l2=3.6224
[323] time=7.92, avg_loss=3.0925, train_err=30.9250
Eval: 64_h1=4.9652, 64_l2=3.6060
[324] time=6.22, avg_loss=3.0921, train_err=30.9210
Eval: 64_h1=4.9652, 64_l2=3.6161
[325] time=6.44, avg_loss=3.0916, train_err=30.9156
Eval: 64_h1=4.9715, 64_l2=3.6201
[326] time=6.90, avg_loss=3.0907, train_err=30.9070
Eval: 64_h1=4.9618, 64_l2=3.6160
[327] time=6.69, avg_loss=3.0906, train_err=30.9056
Eval: 64_h1=4.9695, 64_l2=3.6138
[328] time=6.65, avg_loss=3.0893, train_err=30.8932
Eval: 64_h1=4.9735, 64_l2=3.6283
[329] time=6.96, avg_loss=3.0886, train_err=30.8863
Eval: 64_h1=4.9798, 64_l2=3.6236
Incre Res Update: change index to 33
Incre Res Update: change sub to 1
Incre Res Update: change res to 64
[330] time=6.19, avg_loss=3.0880, train_err=30.8796
Eval: 64_h1=4.9766, 64_l2=3.6225
[331] time=6.85, avg_loss=3.0872, train_err=30.8717
Eval: 64_h1=4.9678, 64_l2=3.6095
[332] time=5.94, avg_loss=3.0871, train_err=30.8707
Eval: 64_h1=4.9652, 64_l2=3.6167
[333] time=5.66, avg_loss=3.0863, train_err=30.8630
Eval: 64_h1=4.9787, 64_l2=3.6326
[334] time=6.73, avg_loss=3.0857, train_err=30.8575
Eval: 64_h1=4.9683, 64_l2=3.6326
[335] time=5.56, avg_loss=3.0861, train_err=30.8606
Eval: 64_h1=4.9776, 64_l2=3.6253
[336] time=5.69, avg_loss=3.0842, train_err=30.8421
Eval: 64_h1=4.9697, 64_l2=3.6166
[337] time=6.71, avg_loss=3.0847, train_err=30.8467
Eval: 64_h1=4.9785, 64_l2=3.6347
[338] time=6.32, avg_loss=3.0831, train_err=30.8310
Eval: 64_h1=4.9705, 64_l2=3.6331
[339] time=5.91, avg_loss=3.0834, train_err=30.8337
Eval: 64_h1=4.9680, 64_l2=3.6257
Incre Res Update: change index to 34
Incre Res Update: change sub to 1
Incre Res Update: change res to 64
[340] time=8.73, avg_loss=3.0823, train_err=30.8226
Eval: 64_h1=4.9679, 64_l2=3.6192
[341] time=7.32, avg_loss=3.0807, train_err=30.8072
Eval: 64_h1=4.9662, 64_l2=3.6109
[342] time=7.22, avg_loss=3.0809, train_err=30.8087
Eval: 64_h1=4.9669, 64_l2=3.6174
[343] time=6.26, avg_loss=3.0807, train_err=30.8071
Eval: 64_h1=4.9697, 64_l2=3.6299
[344] time=8.12, avg_loss=3.0792, train_err=30.7916
Eval: 64_h1=4.9900, 64_l2=3.6546
[345] time=6.24, avg_loss=3.0802, train_err=30.8019
Eval: 64_h1=4.9702, 64_l2=3.6340
[346] time=5.96, avg_loss=3.0788, train_err=30.7880
Eval: 64_h1=4.9669, 64_l2=3.6163
[347] time=7.20, avg_loss=3.0783, train_err=30.7826
Eval: 64_h1=4.9776, 64_l2=3.6260
[348] time=5.97, avg_loss=3.0780, train_err=30.7803
Eval: 64_h1=4.9714, 64_l2=3.6203
[349] time=6.11, avg_loss=3.0766, train_err=30.7656
Eval: 64_h1=4.9616, 64_l2=3.5904
Incre Res Update: change index to 35
Incre Res Update: change sub to 1
Incre Res Update: change res to 64
[350] time=6.48, avg_loss=3.0763, train_err=30.7628
Eval: 64_h1=4.9577, 64_l2=3.5972
[Rank 0]: saved training state to save/3d_navier_stoke/fno/
[351] time=7.66, avg_loss=3.0763, train_err=30.7628
Eval: 64_h1=4.9643, 64_l2=3.6097
[352] time=6.26, avg_loss=3.0749, train_err=30.7489
Eval: 64_h1=4.9609, 64_l2=3.6185
[353] time=6.79, avg_loss=3.0751, train_err=30.7508
Eval: 64_h1=4.9652, 64_l2=3.6153
[354] time=6.91, avg_loss=3.0741, train_err=30.7411
Eval: 64_h1=4.9637, 64_l2=3.6097
[355] time=6.57, avg_loss=3.0733, train_err=30.7327
Eval: 64_h1=4.9657, 64_l2=3.6161
[356] time=5.79, avg_loss=3.0721, train_err=30.7206
Eval: 64_h1=4.9853, 64_l2=3.6345
[357] time=6.60, avg_loss=3.0722, train_err=30.7218
Eval: 64_h1=4.9747, 64_l2=3.6184
[358] time=6.51, avg_loss=3.0713, train_err=30.7125
Eval: 64_h1=4.9579, 64_l2=3.5990
[359] time=7.10, avg_loss=3.0709, train_err=30.7088
Eval: 64_h1=4.9620, 64_l2=3.6120
Incre Res Update: change index to 36
Incre Res Update: change sub to 1
Incre Res Update: change res to 64
[360] time=7.59, avg_loss=3.0705, train_err=30.7048
Eval: 64_h1=4.9678, 64_l2=3.6166
[361] time=7.21, avg_loss=3.0698, train_err=30.6980
Eval: 64_h1=4.9725, 64_l2=3.6271
[362] time=7.28, avg_loss=3.0693, train_err=30.6928
Eval: 64_h1=4.9706, 64_l2=3.6263
[363] time=7.91, avg_loss=3.0685, train_err=30.6852
Eval: 64_h1=4.9547, 64_l2=3.5945
[364] time=7.03, avg_loss=3.0688, train_err=30.6877
Eval: 64_h1=4.9548, 64_l2=3.5849
[365] time=8.56, avg_loss=3.0671, train_err=30.6714
Eval: 64_h1=4.9678, 64_l2=3.6044
[366] time=7.62, avg_loss=3.0671, train_err=30.6705
Eval: 64_h1=4.9908, 64_l2=3.6520
[367] time=7.47, avg_loss=3.0658, train_err=30.6583
Eval: 64_h1=4.9749, 64_l2=3.6309
[368] time=7.17, avg_loss=3.0653, train_err=30.6528
Eval: 64_h1=4.9591, 64_l2=3.6024
[369] time=7.62, avg_loss=3.0652, train_err=30.6523
Eval: 64_h1=4.9700, 64_l2=3.6167
Incre Res Update: change index to 37
Incre Res Update: change sub to 1
Incre Res Update: change res to 64
[370] time=7.38, avg_loss=3.0658, train_err=30.6581
Eval: 64_h1=4.9720, 64_l2=3.6182
[371] time=7.28, avg_loss=3.0642, train_err=30.6422
Eval: 64_h1=4.9658, 64_l2=3.6218
[372] time=5.96, avg_loss=3.0642, train_err=30.6425
Eval: 64_h1=4.9744, 64_l2=3.6328
[373] time=5.59, avg_loss=3.0626, train_err=30.6260
Eval: 64_h1=4.9678, 64_l2=3.6316
[374] time=5.89, avg_loss=3.0615, train_err=30.6151
Eval: 64_h1=4.9847, 64_l2=3.6400
[375] time=6.15, avg_loss=3.0620, train_err=30.6195
Eval: 64_h1=4.9787, 64_l2=3.6380
[376] time=6.40, avg_loss=3.0608, train_err=30.6084
Eval: 64_h1=4.9552, 64_l2=3.5927
[377] time=6.92, avg_loss=3.0606, train_err=30.6058
Eval: 64_h1=4.9689, 64_l2=3.6005
[378] time=8.53, avg_loss=3.0602, train_err=30.6024
Eval: 64_h1=4.9631, 64_l2=3.5975
[379] time=8.41, avg_loss=3.0595, train_err=30.5955
Eval: 64_h1=4.9698, 64_l2=3.6116
Incre Res Update: change index to 38
Incre Res Update: change sub to 1
Incre Res Update: change res to 64
[380] time=6.19, avg_loss=3.0591, train_err=30.5912
Eval: 64_h1=4.9660, 64_l2=3.6010
[381] time=5.98, avg_loss=3.0576, train_err=30.5761
Eval: 64_h1=4.9765, 64_l2=3.6368
[382] time=7.57, avg_loss=3.0570, train_err=30.5703
Eval: 64_h1=4.9645, 64_l2=3.6221
[383] time=6.03, avg_loss=3.0573, train_err=30.5731
Eval: 64_h1=4.9719, 64_l2=3.6346
[384] time=7.07, avg_loss=3.0562, train_err=30.5617
Eval: 64_h1=4.9690, 64_l2=3.6217
[385] time=6.76, avg_loss=3.0561, train_err=30.5608
Eval: 64_h1=4.9640, 64_l2=3.6058
[386] time=5.89, avg_loss=3.0554, train_err=30.5539
Eval: 64_h1=4.9614, 64_l2=3.6101
[387] time=6.65, avg_loss=3.0553, train_err=30.5535
Eval: 64_h1=4.9611, 64_l2=3.5835
[388] time=7.58, avg_loss=3.0550, train_err=30.5496
Eval: 64_h1=4.9659, 64_l2=3.6157
[389] time=7.60, avg_loss=3.0530, train_err=30.5299
Eval: 64_h1=4.9674, 64_l2=3.6078
Incre Res Update: change index to 39
Incre Res Update: change sub to 1
Incre Res Update: change res to 64
[390] time=6.14, avg_loss=3.0529, train_err=30.5292
Eval: 64_h1=4.9483, 64_l2=3.5963
[391] time=5.92, avg_loss=3.0525, train_err=30.5253
Eval: 64_h1=4.9653, 64_l2=3.6214
[392] time=6.06, avg_loss=3.0516, train_err=30.5156
Eval: 64_h1=4.9533, 64_l2=3.5963
[393] time=5.90, avg_loss=3.0516, train_err=30.5164
Eval: 64_h1=4.9570, 64_l2=3.5889
[394] time=5.85, avg_loss=3.0509, train_err=30.5086
Eval: 64_h1=4.9658, 64_l2=3.6057
[395] time=6.23, avg_loss=3.0507, train_err=30.5073
Eval: 64_h1=4.9606, 64_l2=3.5930
[396] time=6.70, avg_loss=3.0498, train_err=30.4979
Eval: 64_h1=4.9560, 64_l2=3.6131
[397] time=7.32, avg_loss=3.0489, train_err=30.4886
Eval: 64_h1=4.9524, 64_l2=3.6128
[398] time=7.09, avg_loss=3.0481, train_err=30.4806
Eval: 64_h1=4.9618, 64_l2=3.6302
[399] time=7.11, avg_loss=3.0492, train_err=30.4919
Eval: 64_h1=4.9677, 64_l2=3.6112
Incre Res Update: change index to 40
Incre Res Update: change sub to 1
Incre Res Update: change res to 64
[400] time=7.16, avg_loss=3.0428, train_err=30.4282
Eval: 64_h1=4.9529, 64_l2=3.6000
[Rank 0]: saved training state to save/3d_navier_stoke/fno/
[401] time=6.17, avg_loss=3.0419, train_err=30.4188
Eval: 64_h1=4.9656, 64_l2=3.6258
[402] time=6.57, avg_loss=3.0416, train_err=30.4164
Eval: 64_h1=4.9569, 64_l2=3.6017
[403] time=6.74, avg_loss=3.0411, train_err=30.4114
Eval: 64_h1=4.9619, 64_l2=3.6276
[404] time=7.55, avg_loss=3.0408, train_err=30.4079
Eval: 64_h1=4.9659, 64_l2=3.6104
[405] time=6.55, avg_loss=3.0405, train_err=30.4049
Eval: 64_h1=4.9558, 64_l2=3.6135
[406] time=7.65, avg_loss=3.0404, train_err=30.4043
Eval: 64_h1=4.9536, 64_l2=3.6001
[407] time=7.90, avg_loss=3.0402, train_err=30.4022
Eval: 64_h1=4.9632, 64_l2=3.6190
[408] time=7.19, avg_loss=3.0403, train_err=30.4026
Eval: 64_h1=4.9653, 64_l2=3.6159
[409] time=6.72, avg_loss=3.0401, train_err=30.4008
Eval: 64_h1=4.9615, 64_l2=3.6102
Incre Res Update: change index to 41
Incre Res Update: change sub to 1
Incre Res Update: change res to 64
[410] time=7.02, avg_loss=3.0399, train_err=30.3991
Eval: 64_h1=4.9607, 64_l2=3.6043
[411] time=7.10, avg_loss=3.0391, train_err=30.3908
Eval: 64_h1=4.9610, 64_l2=3.6084
[412] time=6.81, avg_loss=3.0388, train_err=30.3883
Eval: 64_h1=4.9651, 64_l2=3.6165
[413] time=6.69, avg_loss=3.0383, train_err=30.3829
Eval: 64_h1=4.9646, 64_l2=3.6142
[414] time=6.95, avg_loss=3.0383, train_err=30.3825
Eval: 64_h1=4.9665, 64_l2=3.6205
[415] time=6.30, avg_loss=3.0379, train_err=30.3790
Eval: 64_h1=4.9478, 64_l2=3.5936
[416] time=6.19, avg_loss=3.0376, train_err=30.3761
Eval: 64_h1=4.9486, 64_l2=3.5877
[417] time=5.95, avg_loss=3.0374, train_err=30.3737
Eval: 64_h1=4.9511, 64_l2=3.5996
[418] time=6.69, avg_loss=3.0371, train_err=30.3708
Eval: 64_h1=4.9625, 64_l2=3.6143
[419] time=6.61, avg_loss=3.0372, train_err=30.3715
Eval: 64_h1=4.9565, 64_l2=3.6006
Incre Res Update: change index to 42
Incre Res Update: change sub to 1
Incre Res Update: change res to 64
[420] time=7.04, avg_loss=3.0367, train_err=30.3672
Eval: 64_h1=4.9533, 64_l2=3.5926
[421] time=7.89, avg_loss=3.0364, train_err=30.3639
Eval: 64_h1=4.9555, 64_l2=3.6061
[422] time=7.25, avg_loss=3.0360, train_err=30.3598
Eval: 64_h1=4.9683, 64_l2=3.6215
[423] time=7.29, avg_loss=3.0358, train_err=30.3577
Eval: 64_h1=4.9582, 64_l2=3.6190
[424] time=6.87, avg_loss=3.0354, train_err=30.3543
Eval: 64_h1=4.9548, 64_l2=3.6129
[425] time=6.21, avg_loss=3.0353, train_err=30.3527
Eval: 64_h1=4.9657, 64_l2=3.6186
[426] time=6.62, avg_loss=3.0350, train_err=30.3505
Eval: 64_h1=4.9608, 64_l2=3.6115
[427] time=7.15, avg_loss=3.0346, train_err=30.3455
Eval: 64_h1=4.9477, 64_l2=3.5924
[428] time=7.54, avg_loss=3.0346, train_err=30.3462
Eval: 64_h1=4.9488, 64_l2=3.5993
[429] time=7.43, avg_loss=3.0339, train_err=30.3390
Eval: 64_h1=4.9560, 64_l2=3.6061
Incre Res Update: change index to 43
Incre Res Update: change sub to 1
Incre Res Update: change res to 64
[430] time=7.57, avg_loss=3.0336, train_err=30.3360
Eval: 64_h1=4.9578, 64_l2=3.6070
[431] time=6.87, avg_loss=3.0332, train_err=30.3321
Eval: 64_h1=4.9604, 64_l2=3.6185
[432] time=7.13, avg_loss=3.0335, train_err=30.3352
Eval: 64_h1=4.9543, 64_l2=3.6163
[433] time=6.63, avg_loss=3.0329, train_err=30.3288
Eval: 64_h1=4.9620, 64_l2=3.6151
[434] time=7.21, avg_loss=3.0327, train_err=30.3272
Eval: 64_h1=4.9534, 64_l2=3.6016
[435] time=7.19, avg_loss=3.0324, train_err=30.3238
Eval: 64_h1=4.9514, 64_l2=3.6027
[436] time=7.33, avg_loss=3.0320, train_err=30.3196
Eval: 64_h1=4.9667, 64_l2=3.6367
[437] time=7.81, avg_loss=3.0316, train_err=30.3155
Eval: 64_h1=4.9602, 64_l2=3.6122
[438] time=7.15, avg_loss=3.0313, train_err=30.3126
Eval: 64_h1=4.9605, 64_l2=3.6191
[439] time=6.79, avg_loss=3.0311, train_err=30.3112
Eval: 64_h1=4.9541, 64_l2=3.6017
Incre Res Update: change index to 44
Incre Res Update: change sub to 1
Incre Res Update: change res to 64
[440] time=7.01, avg_loss=3.0307, train_err=30.3070
Eval: 64_h1=4.9544, 64_l2=3.6019
[441] time=7.34, avg_loss=3.0305, train_err=30.3054
Eval: 64_h1=4.9574, 64_l2=3.6048
[442] time=8.10, avg_loss=3.0305, train_err=30.3053
Eval: 64_h1=4.9626, 64_l2=3.6147
[443] time=5.76, avg_loss=3.0298, train_err=30.2981
Eval: 64_h1=4.9680, 64_l2=3.6247
[444] time=6.25, avg_loss=3.0297, train_err=30.2970
Eval: 64_h1=4.9518, 64_l2=3.5820
[445] time=5.67, avg_loss=3.0292, train_err=30.2916
Eval: 64_h1=4.9528, 64_l2=3.5945
[446] time=5.38, avg_loss=3.0290, train_err=30.2899
Eval: 64_h1=4.9644, 64_l2=3.6190
[447] time=7.26, avg_loss=3.0286, train_err=30.2856
Eval: 64_h1=4.9633, 64_l2=3.6129
[448] time=6.99, avg_loss=3.0281, train_err=30.2815
Eval: 64_h1=4.9689, 64_l2=3.6275
[449] time=5.83, avg_loss=3.0279, train_err=30.2791
Eval: 64_h1=4.9581, 64_l2=3.6149
Incre Res Update: change index to 45
Incre Res Update: change sub to 1
Incre Res Update: change res to 64
[450] time=7.40, avg_loss=3.0280, train_err=30.2799
Eval: 64_h1=4.9619, 64_l2=3.6165
[Rank 0]: saved training state to save/3d_navier_stoke/fno/
[451] time=7.10, avg_loss=3.0276, train_err=30.2761
Eval: 64_h1=4.9643, 64_l2=3.6146
[452] time=5.92, avg_loss=3.0272, train_err=30.2723
Eval: 64_h1=4.9642, 64_l2=3.6239
[453] time=8.07, avg_loss=3.0271, train_err=30.2708
Eval: 64_h1=4.9579, 64_l2=3.6075
[454] time=6.18, avg_loss=3.0269, train_err=30.2692
Eval: 64_h1=4.9550, 64_l2=3.6075
[455] time=6.54, avg_loss=3.0263, train_err=30.2632
Eval: 64_h1=4.9591, 64_l2=3.6187
[456] time=7.02, avg_loss=3.0260, train_err=30.2601
Eval: 64_h1=4.9516, 64_l2=3.6061
[457] time=6.72, avg_loss=3.0257, train_err=30.2569
Eval: 64_h1=4.9584, 64_l2=3.6219
[458] time=6.60, avg_loss=3.0257, train_err=30.2570
Eval: 64_h1=4.9549, 64_l2=3.5955
[459] time=7.04, avg_loss=3.0253, train_err=30.2528
Eval: 64_h1=4.9536, 64_l2=3.6055
Incre Res Update: change index to 46
Incre Res Update: change sub to 1
Incre Res Update: change res to 64
[460] time=7.74, avg_loss=3.0251, train_err=30.2505
Eval: 64_h1=4.9514, 64_l2=3.6059
[461] time=5.92, avg_loss=3.0247, train_err=30.2472
Eval: 64_h1=4.9696, 64_l2=3.6206
[462] time=6.36, avg_loss=3.0241, train_err=30.2407
Eval: 64_h1=4.9641, 64_l2=3.6148
[463] time=7.26, avg_loss=3.0242, train_err=30.2418
Eval: 64_h1=4.9595, 64_l2=3.6111
[464] time=7.33, avg_loss=3.0236, train_err=30.2360
Eval: 64_h1=4.9608, 64_l2=3.6093
[465] time=7.38, avg_loss=3.0235, train_err=30.2348
Eval: 64_h1=4.9505, 64_l2=3.5979
[466] time=6.95, avg_loss=3.0230, train_err=30.2296
Eval: 64_h1=4.9642, 64_l2=3.6105
[467] time=7.11, avg_loss=3.0228, train_err=30.2284
Eval: 64_h1=4.9558, 64_l2=3.6189
[468] time=5.90, avg_loss=3.0224, train_err=30.2238
Eval: 64_h1=4.9563, 64_l2=3.6171
[469] time=7.46, avg_loss=3.0222, train_err=30.2221
Eval: 64_h1=4.9535, 64_l2=3.6131
Incre Res Update: change index to 47
Incre Res Update: change sub to 1
Incre Res Update: change res to 64
[470] time=5.88, avg_loss=3.0219, train_err=30.2188
Eval: 64_h1=4.9593, 64_l2=3.6127
[471] time=7.07, avg_loss=3.0217, train_err=30.2171
Eval: 64_h1=4.9560, 64_l2=3.5901
[472] time=5.75, avg_loss=3.0217, train_err=30.2172
Eval: 64_h1=4.9518, 64_l2=3.5974
[473] time=6.38, avg_loss=3.0213, train_err=30.2132
Eval: 64_h1=4.9619, 64_l2=3.6138
[474] time=7.58, avg_loss=3.0206, train_err=30.2057
Eval: 64_h1=4.9604, 64_l2=3.6093
[475] time=6.72, avg_loss=3.0210, train_err=30.2095
Eval: 64_h1=4.9523, 64_l2=3.5952
[476] time=7.99, avg_loss=3.0204, train_err=30.2035
Eval: 64_h1=4.9529, 64_l2=3.6175
[477] time=7.08, avg_loss=3.0200, train_err=30.1997
Eval: 64_h1=4.9441, 64_l2=3.5946
[478] time=7.52, avg_loss=3.0199, train_err=30.1992
Eval: 64_h1=4.9630, 64_l2=3.5996
[479] time=6.41, avg_loss=3.0194, train_err=30.1936
Eval: 64_h1=4.9552, 64_l2=3.6107
Incre Res Update: change index to 48
Incre Res Update: change sub to 1
Incre Res Update: change res to 64
[480] time=6.62, avg_loss=3.0190, train_err=30.1897
Eval: 64_h1=4.9614, 64_l2=3.6102
[481] time=8.06, avg_loss=3.0186, train_err=30.1855
Eval: 64_h1=4.9600, 64_l2=3.6113
[482] time=7.20, avg_loss=3.0182, train_err=30.1821
Eval: 64_h1=4.9565, 64_l2=3.6138
[483] time=6.99, avg_loss=3.0184, train_err=30.1838
Eval: 64_h1=4.9551, 64_l2=3.6058
[484] time=8.41, avg_loss=3.0181, train_err=30.1807
Eval: 64_h1=4.9496, 64_l2=3.5994
[485] time=5.92, avg_loss=3.0179, train_err=30.1790
Eval: 64_h1=4.9662, 64_l2=3.6361
[486] time=6.82, avg_loss=3.0173, train_err=30.1730
Eval: 64_h1=4.9485, 64_l2=3.6006
[487] time=6.33, avg_loss=3.0168, train_err=30.1684
Eval: 64_h1=4.9493, 64_l2=3.5880
[488] time=5.93, avg_loss=3.0169, train_err=30.1693
Eval: 64_h1=4.9531, 64_l2=3.6033
[489] time=6.38, avg_loss=3.0162, train_err=30.1618
Eval: 64_h1=4.9558, 64_l2=3.6036
Incre Res Update: change index to 49
Incre Res Update: change sub to 1
Incre Res Update: change res to 64
[490] time=5.69, avg_loss=3.0159, train_err=30.1588
Eval: 64_h1=4.9584, 64_l2=3.6144
[491] time=6.55, avg_loss=3.0158, train_err=30.1580
Eval: 64_h1=4.9625, 64_l2=3.6135
[492] time=8.58, avg_loss=3.0158, train_err=30.1577
Eval: 64_h1=4.9451, 64_l2=3.5936
[493] time=6.69, avg_loss=3.0157, train_err=30.1568
Eval: 64_h1=4.9532, 64_l2=3.6032
[494] time=6.12, avg_loss=3.0156, train_err=30.1555
Eval: 64_h1=4.9590, 64_l2=3.6047
[495] time=5.69, avg_loss=3.0151, train_err=30.1506
Eval: 64_h1=4.9548, 64_l2=3.6000
[496] time=6.20, avg_loss=3.0146, train_err=30.1464
Eval: 64_h1=4.9611, 64_l2=3.6116
[497] time=5.97, avg_loss=3.0140, train_err=30.1402
Eval: 64_h1=4.9596, 64_l2=3.6245
[498] time=6.86, avg_loss=3.0136, train_err=30.1365
Eval: 64_h1=4.9539, 64_l2=3.6141
[499] time=6.39, avg_loss=3.0136, train_err=30.1357
Eval: 64_h1=4.9504, 64_l2=3.5945
{'train_err': 30.135669193267823, 'avg_loss': 3.0135669193267822, 'avg_lasso_loss': None, 'epoch_train_time': 6.385437635704875, '64_h1': tensor(4.9504, device='cuda:0'), '64_l2': tensor(3.5945, device='cuda:0')}

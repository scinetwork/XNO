
=== Pure data structure ===

X_Train Shape: torch.Size([1000, 1024, 1])
Y_Train Shape: torch.Size([1000, 1024])
X_Test Shape: torch.Size([100, 1024, 1])
Y_Test Shape: torch.Size([100, 1024])

=== Reshape data structure ===

X_Train Shape: torch.Size([1000, 1, 1024])
Y_Train Shape: torch.Size([1000, 1, 1024])
X_Test Shape: torch.Size([100, 1, 1024])
Y_Test Shape: torch.Size([100, 1, 1024])

=== One batch of the Train Loader ===

Loader Type: <class 'torch.utils.data.dataloader.DataLoader'>
Batch Type: <class 'dict'>
Batch['x'].shape: torch.Size([16, 1, 1024])
Batch['y'].shape: torch.Size([16, 1, 1024])

=== One batch of the Test Loader ===

Loader Type: <class 'torch.utils.data.dataloader.DataLoader'>
Batch Type: <class 'dict'>
Batch['x'].shape: torch.Size([16, 1, 1024])
Batch['y'].shape: torch.Size([16, 1, 1024])

=== Device: cuda ===

======== Selected Kernel Description =======
Dimentionality: 1D
Transformation: [ Fourier Neural Operator (FNO) Kernel ]
>>> Overview:
The FNO leverages Fourier Transform to map input data into the spectral domain, where
convolutional operations are performed by truncating high-frequency modes.

>>> Key Features:
- Effective for parameterized Partial Differential Equations (PDEs).
- Reduces computational complexity by retaining only significant modes.

>>> Reference:
Li, Z. et al. 'Fourier Neural Operator for Parametric Partial Differential Equations' (ICLR 2021).
Link: https://arxiv.org/pdf/2010.08895
============================================

================== Config ==================
>>> Normaliztion: None
>>> Activation Function: 
============================================

======== Selected Kernel Description =======
Dimentionality: 1D
Transformation: [ Wavelet Neural Operator (WNO) Kernel ]
>>> Overview:
The WNO uses wavelet transformations to extract multi-resolution features from input signals.
Wavelet decomposition offers a unique advantage in capturing localized features in both spatial
and frequency domains.

>>> Key Features:
- Multi-resolution analysis via wavelet decomposition.
- Supports both compressive sensing and hierarchical learning.

>>> Reference:
Tripura, T. et al. 'Wavelet neural operator: a neural operator for parametric partial differential equations'.
Link: https://arxiv.org/pdf/2205.02191
============================================

================== Config ==================
>>> Normaliztion: None
>>> Activation Function: 
============================================

Original Incre Res: change index to 0
Original Incre Res: change sub to 2
Original Incre Res: change res to 512

### N PARAMS ###
 1427009

### OPTIMIZER ###
 AdamW (
Parameter Group 0
    betas: (0.9, 0.999)
    correct_bias: True
    eps: 1e-06
    initial_lr: 0.001
    lr: 0.001
    weight_decay: 0.0001
)

### SCHEDULER ###
 <torch.optim.lr_scheduler.StepLR object at 0x7fa1bbe61df0>

### LOSSES ###

### INCREMENTAL RESOLUTION + GRADIENT EXPLAINED ###

 * Train: <xno.losses.data_losses.H1Loss object at 0x7fa193562870>

 * Test: {'h1': <xno.losses.data_losses.H1Loss object at 0x7fa193562870>, 'l2': <xno.losses.data_losses.LpLoss object at 0x7fa1bb90cb30>}
Training on 1000 samples
Testing on [100] samples         on resolutions [1024].
Raw outputs of shape torch.Size([16, 1, 512])
[0] time=3.50, avg_loss=0.4252, train_err=6.7487
Eval: 1024_h1=0.1306, 1024_l2=0.0703
[Rank 0]: saved training state to save/1d_burgers/parallel/fw
[1] time=3.01, avg_loss=0.0992, train_err=1.5743
Eval: 1024_h1=0.0901, 1024_l2=0.0620
[2] time=3.01, avg_loss=0.0648, train_err=1.0279
Eval: 1024_h1=0.0654, 1024_l2=0.0400
[3] time=3.01, avg_loss=0.0598, train_err=0.9490
Eval: 1024_h1=0.0803, 1024_l2=0.0459
[4] time=3.01, avg_loss=0.0621, train_err=0.9856
Eval: 1024_h1=0.0606, 1024_l2=0.0394
[5] time=3.02, avg_loss=0.0514, train_err=0.8152
Eval: 1024_h1=0.0627, 1024_l2=0.0384
[6] time=3.00, avg_loss=0.0471, train_err=0.7476
Eval: 1024_h1=0.0584, 1024_l2=0.0402
[7] time=3.02, avg_loss=0.0789, train_err=1.2517
Eval: 1024_h1=0.0672, 1024_l2=0.0414
[8] time=3.00, avg_loss=0.0631, train_err=1.0009
Eval: 1024_h1=0.1420, 1024_l2=0.0453
[9] time=3.01, avg_loss=0.0653, train_err=1.0369
Eval: 1024_h1=0.0874, 1024_l2=0.0476
Incre Res Update: change index to 1
Incre Res Update: change sub to 1
Incre Res Update: change res to 1024
[10] time=3.32, avg_loss=0.0736, train_err=1.1680
Eval: 1024_h1=0.0640, 1024_l2=0.0355
[11] time=3.30, avg_loss=0.0560, train_err=0.8882
Eval: 1024_h1=0.0429, 1024_l2=0.0327
[12] time=3.30, avg_loss=0.0623, train_err=0.9890
Eval: 1024_h1=0.1379, 1024_l2=0.0522
[13] time=3.30, avg_loss=0.1084, train_err=1.7214
Eval: 1024_h1=0.1433, 1024_l2=0.0605
[14] time=3.29, avg_loss=0.1001, train_err=1.5882
Eval: 1024_h1=0.2848, 1024_l2=0.0676
[15] time=3.29, avg_loss=0.1068, train_err=1.6950
Eval: 1024_h1=0.1229, 1024_l2=0.0702
[16] time=3.29, avg_loss=0.1497, train_err=2.3756
Eval: 1024_h1=0.1569, 1024_l2=0.0727
[17] time=3.29, avg_loss=0.2578, train_err=4.0923
Eval: 1024_h1=0.2892, 1024_l2=0.1072
[18] time=3.30, avg_loss=0.2748, train_err=4.3619
Eval: 1024_h1=0.1675, 1024_l2=0.0813
[19] time=3.30, avg_loss=0.2305, train_err=3.6591
Eval: 1024_h1=0.2612, 1024_l2=0.1546
Incre Res Update: change index to 2
Incre Res Update: change sub to 1
Incre Res Update: change res to 1024
[20] time=3.30, avg_loss=0.2730, train_err=4.3335
Eval: 1024_h1=0.2868, 1024_l2=0.3142
[21] time=3.30, avg_loss=0.3118, train_err=4.9500
Eval: 1024_h1=0.4249, 1024_l2=0.1568
[22] time=3.30, avg_loss=0.3512, train_err=5.5745
Eval: 1024_h1=0.5063, 1024_l2=0.4519
[23] time=3.30, avg_loss=0.6953, train_err=11.0367
Eval: 1024_h1=0.8150, 1024_l2=0.7384
[24] time=3.29, avg_loss=0.5513, train_err=8.7507
Eval: 1024_h1=0.3744, 1024_l2=0.4827
[25] time=3.30, avg_loss=0.3675, train_err=5.8333
Eval: 1024_h1=0.4954, 1024_l2=0.3554
[26] time=3.32, avg_loss=0.4202, train_err=6.6698
Eval: 1024_h1=0.3660, 1024_l2=0.7908
[27] time=3.31, avg_loss=0.8334, train_err=13.2284
Eval: 1024_h1=1.0070, 1024_l2=1.4216
[28] time=3.29, avg_loss=1.0079, train_err=15.9978
Eval: 1024_h1=1.0046, 1024_l2=1.2952
[29] time=3.29, avg_loss=1.0047, train_err=15.9474
Eval: 1024_h1=1.0030, 1024_l2=1.2042
Incre Res Update: change index to 3
Incre Res Update: change sub to 1
Incre Res Update: change res to 1024
[30] time=3.29, avg_loss=1.0031, train_err=15.9215
Eval: 1024_h1=1.0019, 1024_l2=1.1389
[31] time=3.30, avg_loss=1.0020, train_err=15.9044
Eval: 1024_h1=1.0012, 1024_l2=1.0919
[32] time=3.30, avg_loss=1.0013, train_err=15.8931
Eval: 1024_h1=1.0008, 1024_l2=1.0600
[33] time=3.30, avg_loss=1.0008, train_err=15.8857
Eval: 1024_h1=1.0005, 1024_l2=1.0385
[34] time=3.29, avg_loss=1.0005, train_err=15.8809
Eval: 1024_h1=1.0003, 1024_l2=1.0239
[35] time=3.29, avg_loss=1.0003, train_err=15.8778
Eval: 1024_h1=1.0002, 1024_l2=1.0146
[36] time=3.31, avg_loss=1.0002, train_err=15.8759
Eval: 1024_h1=1.0001, 1024_l2=1.0088
[37] time=3.29, avg_loss=1.0001, train_err=15.8747
Eval: 1024_h1=1.0001, 1024_l2=1.0051
[38] time=3.29, avg_loss=1.0001, train_err=15.8740
Eval: 1024_h1=1.0000, 1024_l2=1.0030
[39] time=3.29, avg_loss=1.0000, train_err=15.8736
Eval: 1024_h1=1.0000, 1024_l2=1.0016
Incre Res Update: change index to 4
Incre Res Update: change sub to 1
Incre Res Update: change res to 1024
[40] time=3.29, avg_loss=1.0000, train_err=15.8733
Eval: 1024_h1=1.0000, 1024_l2=1.0009
[41] time=3.30, avg_loss=1.0000, train_err=15.8732
Eval: 1024_h1=1.0000, 1024_l2=1.0005
[42] time=3.30, avg_loss=1.0000, train_err=15.8731
Eval: 1024_h1=1.0000, 1024_l2=1.0003
[43] time=3.31, avg_loss=1.0000, train_err=15.8731
Eval: 1024_h1=1.0000, 1024_l2=1.0001
[44] time=3.30, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0001
[45] time=3.28, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[46] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[47] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[48] time=3.30, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[49] time=3.31, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
Incre Res Update: change index to 5
Incre Res Update: change sub to 1
Incre Res Update: change res to 1024
[50] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[Rank 0]: saved training state to save/1d_burgers/parallel/fw
[51] time=3.31, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[52] time=3.30, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[53] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[54] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[55] time=3.30, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[56] time=3.30, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[57] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[58] time=3.30, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[59] time=3.30, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
Incre Res Update: change index to 6
Incre Res Update: change sub to 1
Incre Res Update: change res to 1024
[60] time=3.28, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[61] time=3.30, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[62] time=3.30, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[63] time=3.30, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[64] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[65] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[66] time=3.28, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[67] time=3.28, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[68] time=3.28, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[69] time=3.30, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
Incre Res Update: change index to 7
Incre Res Update: change sub to 1
Incre Res Update: change res to 1024
[70] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[71] time=3.28, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[72] time=3.28, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[73] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[74] time=3.30, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[75] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[76] time=3.30, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[77] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[78] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[79] time=3.30, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
Incre Res Update: change index to 8
Incre Res Update: change sub to 1
Incre Res Update: change res to 1024
[80] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[81] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[82] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[83] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[84] time=3.31, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[85] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[86] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[87] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[88] time=3.30, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[89] time=3.30, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
Incre Res Update: change index to 9
Incre Res Update: change sub to 1
Incre Res Update: change res to 1024
[90] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[91] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[92] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[93] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[94] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[95] time=3.28, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[96] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[97] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[98] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[99] time=3.27, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
Incre Res Update: change index to 10
Incre Res Update: change sub to 1
Incre Res Update: change res to 1024
[100] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[Rank 0]: saved training state to save/1d_burgers/parallel/fw
[101] time=3.30, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[102] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[103] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[104] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[105] time=3.30, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[106] time=3.30, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[107] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[108] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[109] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
Incre Res Update: change index to 11
Incre Res Update: change sub to 1
Incre Res Update: change res to 1024
[110] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[111] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[112] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[113] time=3.30, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[114] time=3.31, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[115] time=3.30, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[116] time=3.28, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[117] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[118] time=3.28, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[119] time=3.31, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
Incre Res Update: change index to 12
Incre Res Update: change sub to 1
Incre Res Update: change res to 1024
[120] time=3.28, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[121] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[122] time=3.31, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[123] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[124] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[125] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[126] time=3.30, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[127] time=3.30, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[128] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[129] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
Incre Res Update: change index to 13
Incre Res Update: change sub to 1
Incre Res Update: change res to 1024
[130] time=3.28, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[131] time=3.30, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[132] time=3.31, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[133] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[134] time=3.28, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[135] time=3.30, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[136] time=3.31, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[137] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[138] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[139] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
Incre Res Update: change index to 14
Incre Res Update: change sub to 1
Incre Res Update: change res to 1024
[140] time=3.30, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[141] time=3.28, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[142] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[143] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[144] time=3.31, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[145] time=3.28, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[146] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[147] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[148] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[149] time=3.30, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
Incre Res Update: change index to 15
Incre Res Update: change sub to 1
Incre Res Update: change res to 1024
[150] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[Rank 0]: saved training state to save/1d_burgers/parallel/fw
[151] time=3.30, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[152] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[153] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[154] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[155] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[156] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[157] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[158] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[159] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
Incre Res Update: change index to 16
Incre Res Update: change sub to 1
Incre Res Update: change res to 1024
[160] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[161] time=3.31, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[162] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[163] time=3.30, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[164] time=3.30, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[165] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[166] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[167] time=3.28, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[168] time=3.30, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[169] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
Incre Res Update: change index to 17
Incre Res Update: change sub to 1
Incre Res Update: change res to 1024
[170] time=3.30, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[171] time=3.30, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[172] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[173] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[174] time=3.31, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[175] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[176] time=3.30, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[177] time=3.28, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[178] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[179] time=3.31, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
Incre Res Update: change index to 18
Incre Res Update: change sub to 1
Incre Res Update: change res to 1024
[180] time=3.30, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[181] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[182] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[183] time=3.30, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[184] time=3.30, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[185] time=3.30, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[186] time=3.30, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[187] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[188] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[189] time=3.28, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
Incre Res Update: change index to 19
Incre Res Update: change sub to 1
Incre Res Update: change res to 1024
[190] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[191] time=3.30, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[192] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[193] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[194] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[195] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[196] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[197] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[198] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[199] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
Incre Res Update: change index to 20
Incre Res Update: change sub to 1
Incre Res Update: change res to 1024
[200] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[Rank 0]: saved training state to save/1d_burgers/parallel/fw
[201] time=3.31, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[202] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[203] time=3.28, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[204] time=3.30, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[205] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[206] time=3.31, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[207] time=3.30, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[208] time=3.28, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[209] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
Incre Res Update: change index to 21
Incre Res Update: change sub to 1
Incre Res Update: change res to 1024
[210] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[211] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[212] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[213] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[214] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[215] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[216] time=3.28, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[217] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[218] time=3.30, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[219] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
Incre Res Update: change index to 22
Incre Res Update: change sub to 1
Incre Res Update: change res to 1024
[220] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[221] time=3.30, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[222] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[223] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[224] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[225] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[226] time=3.30, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[227] time=3.30, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[228] time=3.30, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[229] time=3.30, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
Incre Res Update: change index to 23
Incre Res Update: change sub to 1
Incre Res Update: change res to 1024
[230] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[231] time=3.30, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[232] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[233] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[234] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[235] time=3.31, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[236] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[237] time=3.28, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[238] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[239] time=3.28, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
Incre Res Update: change index to 24
Incre Res Update: change sub to 1
Incre Res Update: change res to 1024
[240] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[241] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[242] time=3.30, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[243] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[244] time=3.30, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[245] time=3.28, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[246] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[247] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[248] time=3.28, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
[249] time=3.29, avg_loss=1.0000, train_err=15.8730
Eval: 1024_h1=1.0000, 1024_l2=1.0000
{'train_err': 15.873015873015873, 'avg_loss': 1.0, 'avg_lasso_loss': None, 'epoch_train_time': 3.2866845168173313, '1024_h1': tensor(1., device='cuda:0'), '1024_l2': tensor(1., device='cuda:0')}
